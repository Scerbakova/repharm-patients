{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class BoolRepresentationPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(value) {\n    if (value) {\n      // Use the imported SVG as a string and sanitize it\n      const tickMarkIcon = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\">\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.255 16.503 19.6 3.826 16.393.533 7.257 9.916 3.604 6.165.398 9.457l3.653 3.751-.002.002 3.206 3.293z\" fill=\"green\"/>\n        </svg>\n      `;\n      return this.sanitizer.bypassSecurityTrustHtml(tickMarkIcon);\n    }\n    return '<span class=\"red-no\">&#10060;</span>';\n  }\n}\nBoolRepresentationPipe.ɵfac = function BoolRepresentationPipe_Factory(t) {\n  return new (t || BoolRepresentationPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nBoolRepresentationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"boolRepresentation\",\n  type: BoolRepresentationPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;EAAiB;EAC9CC,SAAS,CAACC,KAAc;IACtB,IAAIA,KAAK,EAAE;MACT;MACA,MAAMC,YAAY,GAAG;;;;OAIpB;MACD,OAAO,IAAI,CAACH,SAAS,CAACI,uBAAuB,CAACD,YAAY,CAAC;;IAE7D,OAAO,sCAAsC;EAC/C;;AAbWL,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;;QAAtBA,sBAAsB;EAAAO;AAAA","names":["BoolRepresentationPipe","constructor","sanitizer","transform","value","tickMarkIcon","bypassSecurityTrustHtml","pure"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\repharm-patients\\ClientApp\\src\\app\\pipes\\bool-representation.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { tickMarkIcon } from '../../assets/icons/tickMarkIcon';\n\n@Pipe({\n  name: 'boolRepresentation',\n})\nexport class BoolRepresentationPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(value: boolean): SafeHtml {\n    if (value) {\n      // Use the imported SVG as a string and sanitize it\n      const tickMarkIcon = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\">\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.255 16.503 19.6 3.826 16.393.533 7.257 9.916 3.604 6.165.398 9.457l3.653 3.751-.002.002 3.206 3.293z\" fill=\"green\"/>\n        </svg>\n      `;\n      return this.sanitizer.bypassSecurityTrustHtml(tickMarkIcon);\n    }\n    return '<span class=\"red-no\">&#10060;</span>';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}